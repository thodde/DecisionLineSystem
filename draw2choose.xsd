<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs='http://www.w3.org/2001/XMLSchema'>

<!-- Type of event -->
<xs:simpleType name='eventType'>
 <xs:restriction base='xs:string'>
  <xs:enumeration value='open'/>
  <xs:enumeration value='closed'/>
 </xs:restriction>
</xs:simpleType>

<!-- Behavior of event -->
<xs:simpleType name='behaviorType'>
 <xs:restriction base='xs:string'>
  <xs:enumeration value='asynchronous'/>
  <xs:enumeration value='roundRobin'/>
 </xs:restriction>
</xs:simpleType>


<!-- A Choice has a string and an index position -->
<xs:element name='choice'>
  <xs:complexType>
    <xs:attribute name='value' type='xs:string'  use='required'/>
    <xs:attribute name='index' type='xs:int' use='required'/>
  </xs:complexType>
</xs:element>

<!-- A report entry -->
<xs:element name='entry'>
  <xs:complexType>
    <xs:attribute name='id'          type='xs:string'  use='required'/>
    <xs:attribute name='type'        type='eventType'  use='required'/>
    <xs:attribute name='behavior'    type='behaviorType' use='required'/>
    <xs:attribute name='question'    type='xs:string'  use='required'/>
    <xs:attribute name='numChoices'  type='xs:int' use='required'/>
    <xs:attribute name='numRounds'   type='xs:int' use='required'/>
    <xs:attribute name='created'     type='xs:string'  use='required'/>
    <xs:attribute name='completed'   type='xs:boolean' use='required'/>
  </xs:complexType>
</xs:element>

<!--
 A user has a name string and an (optional) string password, which is
 an SHA1-hased password so the real password never transmits in plain
 text.
-->
<xs:element name='user'>
  <xs:complexType>
    <xs:attribute name='name'     type='xs:string'  use='required'/>
    <xs:attribute name='password' type='xs:string'  use='optional'/>
  </xs:complexType>
</xs:element>


<!-- Each Message is a request or response -->
<xs:element name='message'>       
  <xs:complexType>
    <xs:choice>
      <xs:element ref='response'/>
      <xs:element ref='request'/>
    </xs:choice>
  </xs:complexType>
</xs:element>

<!-- All response sub-types are declared here -->
<xs:element name='response'>      
  <xs:complexType>
    <xs:choice>
      <xs:element ref='addChoiceResponse'/>
      <xs:element ref='addEdgeResponse'/>
      <xs:element ref='adminResponse'/>
      <xs:element ref='closeResponse'/>
      <xs:element ref='connectResponse'/>
      <xs:element ref='createResponse'/>
      <xs:element ref='forceResponse'/>
      <xs:element ref='joinResponse'/>
      <xs:element ref='removeResponse'/>
      <xs:element ref='reportResponse'/>
      <xs:element ref='signInResponse'/>
      <xs:element ref='turnResponse'/>
    </xs:choice>
    <xs:attribute name='version' type='xs:string'  use='optional'/>
    <xs:attribute name='id'      type='xs:string'  use='required'/>
    <xs:attribute name='success' type='xs:boolean' use='required'/>

    <!-- Only on failure -->
    <xs:attribute name='reason'  type='xs:string'  use='optional'/>  
  </xs:complexType>
</xs:element>

<xs:element name='request'>       <!-- All request sub-types are declared here -->
  <xs:complexType>
    <xs:choice>
      <xs:element ref='addChoiceRequest'/>
      <xs:element ref='addEdgeRequest'/>
      <xs:element ref='adminRequest'/>
      <xs:element ref='closeRequest'/>
      <xs:element ref='connectRequest'/>
      <xs:element ref='createRequest'/>
      <xs:element ref='forceRequest'/>
      <xs:element ref='kickRequest'/>
      <xs:element ref='removeRequest'/>
      <xs:element ref='reportRequest'/>
      <xs:element ref='signInRequest'/>
    </xs:choice>
    <xs:attribute name='version' type='xs:string'  use='optional'/>
    <xs:attribute name='id' type='xs:string' use='required'/>
  </xs:complexType>
</xs:element>

<!-- Connect to server -->
<!-- _________________ -->

<xs:element name='connectRequest'/>

<xs:element name='connectResponse'>
  <xs:complexType>
    <!-- This unique ID is generated by Server (and used there) -->
    <xs:attribute name='id' type='xs:string' use='required'/>
  </xs:complexType>
</xs:element>

<!-- Create Event      -->
<!-- _________________ -->

<xs:element name='createRequest'> 
  <xs:complexType>
    <!-- all choices, one at a time, as (string,index) entries -->
    <!-- moderator pre-signs in with the following user/password -->
    <xs:sequence>
      <xs:element ref='choice' minOccurs='0' maxOccurs='unbounded'/>
      <xs:element ref='user' minOccurs='1' maxOccurs='1'/>
    </xs:sequence>

    <xs:attribute name='behavior'   type="behaviorType" use="required"/>
    <xs:attribute name='type'       type='eventType'    use='required'/>
    <xs:attribute name='question'   type='xs:string'    use='required'/>
    <xs:attribute name='numChoices' type='xs:int'       use='required'/>
    <xs:attribute name='numRounds'  type='xs:int'       use='required'/>

  </xs:complexType>
</xs:element>

<xs:element name='createResponse'> 
 <xs:complexType>
    <xs:attribute name='id' type='xs:string' use='required'/>   
  </xs:complexType>
</xs:element>

<!-- Sign Into Event    -->
<!-- __________________ -->

<xs:element name='signInRequest'> 
  <xs:complexType>
    <!-- participant signs in with the following user/password -->
    <xs:sequence>
      <xs:element ref='user' minOccurs='1' maxOccurs='1'/>
    </xs:sequence>

    <!-- meeting to signIn -->
    <xs:attribute name='id'         type='xs:string' use='required'/>
  </xs:complexType>
</xs:element>


<!--  when user joins -->
<xs:element name='joinResponse'> 
 <xs:complexType>
    <!-- user that is joining given event -->
    <xs:sequence>
      <xs:element ref='user' minOccurs='1' maxOccurs='unbounded'/>
    </xs:sequence>

    <xs:attribute name='id'         type='xs:string' use='required'/> 
 </xs:complexType>
 </xs:element>

<!-- in signinResponse, client is given their ordinal number (0-based) -->
<xs:element name='signInResponse'> 
 <xs:complexType>
    <!-- all choices that exist, one at a time, as (string,index) entries -->
    <xs:sequence>
      <xs:element ref='choice' minOccurs='0' maxOccurs='unbounded'/>
      <xs:element ref='user' minOccurs='0' maxOccurs='unbounded'/>
    </xs:sequence>

    <xs:attribute name='id'         type='xs:string' use='required'/>   
    <xs:attribute name='behavior'   type="behaviorType" use='required'/>
    <xs:attribute name='type'       type='eventType' use='required'/>
    <xs:attribute name='question'   type='xs:string' use='required'/>
    <xs:attribute name='numChoices' type='xs:int'    use='required'/>
    <xs:attribute name='numRounds'  type='xs:int'    use='required'/>
    <xs:attribute name='position'   type='xs:int'    use='required'/>
  </xs:complexType>
</xs:element>

<!-- Update Choice To Event   -->
<!-- ________________________ -->

<xs:element name='addChoiceRequest'> 
  <xs:complexType>
    <xs:attribute name='id'         type='xs:string' use='required'/>
    <xs:attribute name='number'     type='xs:int' use='required'/>
    <xs:attribute name='choice'     type='xs:string' use='required'/>
  </xs:complexType>
</xs:element>

<xs:element name='addChoiceResponse'>
  <xs:complexType>
    <xs:attribute name='id'         type='xs:string' use='required'/>
    <xs:attribute name='number'     type='xs:int' use='required'/>
    <xs:attribute name='choice'     type='xs:string' use='required'/>
  </xs:complexType>
</xs:element> 

<!-- Add Edge To Event      -->
<!-- ______________________ -->

<xs:element name='addEdgeRequest'> 
  <xs:complexType>
    <xs:attribute name='id'         type='xs:string' use='required'/>
    <xs:attribute name='left'       type='xs:int' use='required'/>
    <xs:attribute name='right'      type='xs:int' use='required'/>
    <xs:attribute name='height'     type='xs:int' use='required'/>
  </xs:complexType>
</xs:element>

<xs:element name='addEdgeResponse'>
  <xs:complexType>
    <xs:attribute name='id'         type='xs:string' use='required'/>
    <xs:attribute name='left'       type='xs:int' use='required'/>
    <xs:attribute name='right'      type='xs:int' use='required'/>
    <xs:attribute name='height'     type='xs:int' use='required'/>
  </xs:complexType>
</xs:element>

<!-- CloseRequest            -->
<!-- _______________________ -->

<xs:element name='closeRequest'> 
  <xs:complexType>
    <!-- force closure of a single event by moderator.-->
    <xs:attribute name='id'   type='xs:string' use='required'/>
  </xs:complexType>
</xs:element>

<xs:element name='closeResponse'/>

<!-- AdminRequest           -->
<!-- ______________________ -->

<xs:element name='adminRequest'> 
  <xs:complexType>
    <!-- participant signs in with the following user/password -->
    <xs:sequence>
      <xs:element ref='user' minOccurs='1' maxOccurs='1'/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<!-- admin response returns key to be used for all future invocations -->
<xs:element name='adminResponse'>
  <xs:complexType>
    <xs:attribute name='key'   type='xs:string' use='required'/>
  </xs:complexType>
</xs:element>

<!-- ReportRequest           -->
<!-- _______________________ -->

<!-- admin requests must pass in key to be authorized -->
<xs:element name='reportRequest'>
  <xs:complexType>
    <xs:attribute name='key'   type='xs:string' use='required'/>
    <xs:attribute name='type'  type='eventType' use='required'/>
  </xs:complexType>
</xs:element>

<xs:element name='reportResponse'>
  <xs:complexType>
    <xs:sequence>
      <xs:element ref='entry' minOccurs='0' maxOccurs='unbounded'/>
    </xs:sequence>
  </xs:complexType>
</xs:element>

<!-- RemoveRequest           -->
<!-- _______________________ -->

<xs:element name='removeRequest'> 
  <xs:complexType>
    <xs:attribute name='key'  type='xs:string' use='required'/>
   
    <!-- remove a single event? use this one -->
    <xs:attribute name='id'   type='xs:string' use='optional'/>

    <!-- remove completed/uncompleted events more then X days old. Add these two -->
    <xs:attribute name='completed' type='xs:boolean' use='optional'/>
    <xs:attribute name='daysOld'   type='xs:int' use='optional'/>

  </xs:complexType>
</xs:element>

<xs:element name='removeResponse'>
  <xs:complexType>
    <xs:attribute name='numberAffected'  type='xs:int' use='required'/>
  </xs:complexType>
</xs:element>

<!-- ForceRequest            -->
<!-- _______________________ -->

<xs:element name='forceRequest'> 
  <xs:complexType>
    <xs:attribute name='key'  type='xs:string' use='required'/>
   
    <!-- force closure of a single event? use this one -->
    <xs:attribute name='id'   type='xs:string' use='optional'/>

    <!-- force closure of uncompleted events more then X days old. Add these two -->
    <xs:attribute name='daysOld'   type='xs:int' use='optional'/>

  </xs:complexType>
</xs:element>

<xs:element name='forceResponse'>
  <xs:complexType>
    <xs:attribute name='numberAffected'  type='xs:int' use='required'/>
  </xs:complexType>
</xs:element>

<!-- TurnResponse -->
<!-- ____________ -->

<!-- client receiving this response is told to make their choice -->
<xs:element name='turnResponse'>
  <xs:complexType>
    <xs:attribute name='completed'  type='xs:boolean' use='optional'/>
  </xs:complexType>
</xs:element>


<!--  Kick User Request [must be round robin] -->
<!-- _______________________ -->

<xs:element name='kickRequest'> 
  <xs:complexType>
    <!-- remove a user from this event -->
    <xs:attribute name='id'   type='xs:string' use='optional'/>

    <!-- remove user from this event id. -->
    <xs:attribute name='user'      type='xs:string' use='required'/>

  </xs:complexType>
</xs:element>

<!-- client receives this [in fact everyone gets this] -->
<xs:element name='kickResponse'>
  <xs:complexType>
    <xs:attribute name='completed'  type='xs:boolean' use='optional'/>
  </xs:complexType>
</xs:element>


</xs:schema>

